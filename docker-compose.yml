version: "3.8"

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - AI_SERVICE_URL=http://ai-service:5001
    volumes:
      - "./backend:/app"  # Mount the backend code
      - "/app/node_modules"  # Ensure node_modules is handled properly
      - "./backend/dist:/app/dist"  # Mount the dist folder for real-time updates
    command: npm run start # Make sure you're starting the app correctly
    depends_on:
      - ai-service
    networks:
      - app-network

  ai-service:
    build: ./ai
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - "./ai:/app"  # Mount the AI service code
      - /app/__pycache__ # Exclude Python cache files
    command: python app.py  # Ensure this is the right entry command for your service
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      - AI_SERVICE_URL=http://ai-service:5001
    volumes:
      - "./frontend:/app"  # Mount the frontend code
      - "/app/node_modules"  # Ensure node_modules is handled properly
      - "./frontend/.next:/app/.next"  # Mount the .next folder for real-time updates
      - "./frontend/public:/app/public" 
    command: npm run dev # Ensure you're running the development mode for real-time updates
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
